{
    "swagger": "2.0",
    "info": {
        "version": "0.0.1",
        "title": "Course Builder Api"
    },
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/courses/{id}": {
            "get": {
                "x-name": "getCoursesById",
                "description": "Returns specified course to the caller",
                "operationId": "course",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the course you wish to retrieve",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/courseNotification"
                        }
                    }
                }
            }
        },
        "/courses/available": {
            "get": {
                "x-name": "coursesAvailableByUID",
                "description": "Returns array of title/id pairs for display in menu by User Id",
                "operationId": "coursesAvailableByUID",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/availableCourseNotification"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "course": {
            "title": "Course",
            "description": "Course",
            "type": "object",
            "required": [
                "id",
                "title"
            ],
            "properties": {
                "id": {
                    "description": "The unique identifier for a course",
                    "type": "string",
                    "format": "uuid"
                },
                "title": {
                    "description": "Title of the course",
                    "type": "string",
                    "x-faker": "company.companyName"
                },
                "sections": {
                    "description": "Section to break up the course e.g. chapter week semester",
                    "type": "array",
                    "items": {
                        "title": "section",
                        "description": "section",
                        "type": "object",
                        "required": [
                            "id",
                            "title",
                            "order"
                        ],
                        "properties": {
                            "id": {
                                "description": "The unique identifier for a section",
                                "type": "string",
                                "format": "uuid"
                            },
                            "title": {
                                "description": "Title of the section",
                                "type": "string",
                                "x-faker": "commerce.productName"
                            },
                            "order": {
                                "description": "Order to present section",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100
                            },
                            "summary": {
                                "description": "summary of the section",
                                "type": "string"
                            },
                            "assignments": {
                                "description": "assignments to perform for this section",
                                "type": "array",
                                "items": {
                                    "title": "assignment",
                                    "description": "assignment",
                                    "type": "object",
                                    "required": [
                                        "id",
                                        "name",
                                        "link",
                                        "type"
                                    ],
                                    "properties": {
                                        "id": {
                                            "description": "The unique identifier for an assignment",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "name": {
                                            "description": "Name of the assignment",
                                            "type": "string",
                                            "x-faker": "commerce.productName"
                                        },
                                        "link": {
                                            "description": "link to access the assignment",
                                            "type": "string",
                                            "format": "uri",
                                            "x-faker": "internet.url"
                                        },
                                        "type": {
                                            "description": "type of assignment",
                                            "type": "string"
                                        },
                                        "openDate": {
                                            "description": "Date that the assignment is open to act upon",
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "closeDate": {
                                            "description": "Date that the assignment is closes and can no longer be acted upon",
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "pointsAvailable": {
                                            "description": "how many points are available to earn",
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 1000
                                        },
                                        "pointsEarned": {
                                            "description": "points earned out of total available",
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 1000
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "section": {
            "title": "section",
            "description": "section",
            "type": "object",
            "required": [
                "id",
                "title",
                "order"
            ],
            "properties": {
                "id": {
                    "description": "The unique identifier for a section",
                    "type": "string",
                    "format": "uuid"
                },
                "title": {
                    "description": "Title of the section",
                    "type": "string",
                    "x-faker": "commerce.productName"
                },
                "order": {
                    "description": "Order to present section",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                },
                "summary": {
                    "description": "summary of the section",
                    "type": "string"
                },
                "assignments": {
                    "description": "assignments to perform for this section",
                    "type": "array",
                    "items": {
                        "title": "assignment",
                        "description": "assignment",
                        "type": "object",
                        "required": [
                            "id",
                            "name",
                            "link",
                            "type"
                        ],
                        "properties": {
                            "id": {
                                "description": "The unique identifier for an assignment",
                                "type": "string",
                                "format": "uuid"
                            },
                            "name": {
                                "description": "Name of the assignment",
                                "type": "string",
                                "x-faker": "commerce.productName"
                            },
                            "link": {
                                "description": "link to access the assignment",
                                "type": "string",
                                "format": "uri",
                                "x-faker": "internet.url"
                            },
                            "type": {
                                "description": "type of assignment",
                                "type": "string"
                            },
                            "openDate": {
                                "description": "Date that the assignment is open to act upon",
                                "type": "string",
                                "format": "date-time"
                            },
                            "closeDate": {
                                "description": "Date that the assignment is closes and can no longer be acted upon",
                                "type": "string",
                                "format": "date-time"
                            },
                            "pointsAvailable": {
                                "description": "how many points are available to earn",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1000
                            },
                            "pointsEarned": {
                                "description": "points earned out of total available",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1000
                            }
                        }
                    }
                }
            }
        },
        "assignment": {
            "title": "assignment",
            "description": "assignment",
            "type": "object",
            "required": [
                "id",
                "name",
                "link",
                "type"
            ],
            "properties": {
                "id": {
                    "description": "The unique identifier for an assignment",
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "description": "Name of the assignment",
                    "type": "string",
                    "x-faker": "commerce.productName"
                },
                "link": {
                    "description": "link to access the assignment",
                    "type": "string",
                    "format": "uri",
                    "x-faker": "internet.url"
                },
                "type": {
                    "description": "type of assignment",
                    "type": "string"
                },
                "openDate": {
                    "description": "Date that the assignment is open to act upon",
                    "type": "string",
                    "format": "date-time"
                },
                "closeDate": {
                    "description": "Date that the assignment is closes and can no longer be acted upon",
                    "type": "string",
                    "format": "date-time"
                },
                "pointsAvailable": {
                    "description": "how many points are available to earn",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1000
                },
                "pointsEarned": {
                    "description": "points earned out of total available",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1000
                }
            }
        },
        "availableCourse": {
            "title": "availableCourse",
            "description": "title, id pair for course selection",
            "type": "object",
            "required": [
                "id",
                "title"
            ],
            "properties": {
                "id": {
                    "description": "The unique identifier for a course",
                    "type": "string",
                    "format": "uuid"
                },
                "title": {
                    "description": "Title of the course",
                    "type": "string",
                    "x-faker": "company.companyName"
                }
            }
        },
        "notification": {
            "title": "notification",
            "description": "Object returned by all api calls that specifies, http status code, success, payload and or error messages",
            "type": "object",
            "required": [
                "status",
                "success"
            ],
            "properties": {
                "status": {
                    "description": "Http status code",
                    "type": "number",
                    "minimum": 200,
                    "maximum": 599
                },
                "success": {
                    "description": "Success or failure of api call",
                    "type": "boolean"
                },
                "message": {
                    "description": "A message that does not fit in the error category",
                    "type": "string"
                },
                "errors": {
                    "description": "An array of errors pertaining to the attempted api call",
                    "type": "array",
                    "items": {
                        "title": "error",
                        "description": "An error message resulting from an api call",
                        "type": "object",
                        "required": [
                            "message"
                        ],
                        "properties": {
                            "message": {
                                "description": "A description of the error that has occurred",
                                "type": "string"
                            },
                            "property": {
                                "description": "If error is a validation error, then which property was deemed invalid",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "error": {
            "title": "error",
            "description": "An error message resulting from an api call",
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "description": "A description of the error that has occurred",
                    "type": "string"
                },
                "property": {
                    "description": "If error is a validation error, then which property was deemed invalid",
                    "type": "string"
                }
            }
        },
        "courseNotification": {
            "title": "courseNotification",
            "description": "Object returned by all api calls that specifies, http status code, success, payload and or error messages",
            "type": "object",
            "required": [
                "status",
                "success"
            ],
            "allOf": [
                {
                    "title": "notification",
                    "description": "Object returned by all api calls that specifies, http status code, success, payload and or error messages",
                    "type": "object",
                    "required": [
                        "status",
                        "success"
                    ],
                    "properties": {
                        "status": {
                            "description": "Http status code",
                            "type": "number",
                            "minimum": 200,
                            "maximum": 599
                        },
                        "success": {
                            "description": "Success or failure of api call",
                            "type": "boolean"
                        },
                        "message": {
                            "description": "A message that does not fit in the error category",
                            "type": "string"
                        },
                        "errors": {
                            "description": "An array of errors pertaining to the attempted api call",
                            "type": "array",
                            "items": {
                                "title": "error",
                                "description": "An error message resulting from an api call",
                                "type": "object",
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "description": "A description of the error that has occurred",
                                        "type": "string"
                                    },
                                    "property": {
                                        "description": "If error is a validation error, then which property was deemed invalid",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "properties": {
                        "payload": {
                            "title": "Course",
                            "description": "Course",
                            "type": "object",
                            "required": [
                                "id",
                                "title"
                            ],
                            "properties": {
                                "id": {
                                    "description": "The unique identifier for a course",
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "title": {
                                    "description": "Title of the course",
                                    "type": "string",
                                    "x-faker": "company.companyName"
                                },
                                "sections": {
                                    "description": "Section to break up the course e.g. chapter week semester",
                                    "type": "array",
                                    "items": {
                                        "title": "section",
                                        "description": "section",
                                        "type": "object",
                                        "required": [
                                            "id",
                                            "title",
                                            "order"
                                        ],
                                        "properties": {
                                            "id": {
                                                "description": "The unique identifier for a section",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "title": {
                                                "description": "Title of the section",
                                                "type": "string",
                                                "x-faker": "commerce.productName"
                                            },
                                            "order": {
                                                "description": "Order to present section",
                                                "type": "number",
                                                "minimum": 0,
                                                "maximum": 100
                                            },
                                            "summary": {
                                                "description": "summary of the section",
                                                "type": "string"
                                            },
                                            "assignments": {
                                                "description": "assignments to perform for this section",
                                                "type": "array",
                                                "items": {
                                                    "title": "assignment",
                                                    "description": "assignment",
                                                    "type": "object",
                                                    "required": [
                                                        "id",
                                                        "name",
                                                        "link",
                                                        "type"
                                                    ],
                                                    "properties": {
                                                        "id": {
                                                            "description": "The unique identifier for an assignment",
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "name": {
                                                            "description": "Name of the assignment",
                                                            "type": "string",
                                                            "x-faker": "commerce.productName"
                                                        },
                                                        "link": {
                                                            "description": "link to access the assignment",
                                                            "type": "string",
                                                            "format": "uri",
                                                            "x-faker": "internet.url"
                                                        },
                                                        "type": {
                                                            "description": "type of assignment",
                                                            "type": "string"
                                                        },
                                                        "openDate": {
                                                            "description": "Date that the assignment is open to act upon",
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "closeDate": {
                                                            "description": "Date that the assignment is closes and can no longer be acted upon",
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "pointsAvailable": {
                                                            "description": "how many points are available to earn",
                                                            "type": "number",
                                                            "minimum": 0,
                                                            "maximum": 1000
                                                        },
                                                        "pointsEarned": {
                                                            "description": "points earned out of total available",
                                                            "type": "number",
                                                            "minimum": 0,
                                                            "maximum": 1000
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            ]
        },
        "availableCourseNotification": {
            "title": "availableCourseNotification",
            "description": "Object returned by all api calls that specifies, http status code, success, payload and or error messages",
            "type": "object",
            "required": [
                "status",
                "success"
            ],
            "allOf": [
                {
                    "title": "notification",
                    "description": "Object returned by all api calls that specifies, http status code, success, payload and or error messages",
                    "type": "object",
                    "required": [
                        "status",
                        "success"
                    ],
                    "properties": {
                        "status": {
                            "description": "Http status code",
                            "type": "number",
                            "minimum": 200,
                            "maximum": 599
                        },
                        "success": {
                            "description": "Success or failure of api call",
                            "type": "boolean"
                        },
                        "message": {
                            "description": "A message that does not fit in the error category",
                            "type": "string"
                        },
                        "errors": {
                            "description": "An array of errors pertaining to the attempted api call",
                            "type": "array",
                            "items": {
                                "title": "error",
                                "description": "An error message resulting from an api call",
                                "type": "object",
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "description": "A description of the error that has occurred",
                                        "type": "string"
                                    },
                                    "property": {
                                        "description": "If error is a validation error, then which property was deemed invalid",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "properties": {
                        "payload": {
                            "title": "availableCourse",
                            "description": "title, id pair for course selection",
                            "type": "object",
                            "required": [
                                "id",
                                "title"
                            ],
                            "properties": {
                                "id": {
                                    "description": "The unique identifier for a course",
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "title": {
                                    "description": "Title of the course",
                                    "type": "string",
                                    "x-faker": "company.companyName"
                                }
                            }
                        }
                    }
                }
            ]
        }
    },
    "responses": {},
    "parameters": {},
    "securityDefinitions": {},
    "tags": []
}