version: "3"
services:
  frontend:
    environment:
      APPLICATION_NAME: wk_frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    image: ${wk_frontend_image}
    env_file:
      - ./.env
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 5s
      placement:
        constraints: [node.role == worker]

  api:
    environment:
      APPLICATION_NAME: wk_api
    ports:
      - "${API_PORT}:${API_PORT}"
    image: ${wk_api_image}
    env_file:
      - ./.env
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 5s
      placement:
        constraints: [node.role == worker]

  data:
    # environment:
    #   POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - "${TESTING_API_PORT}:${TESTING_API_PORT}"
    image: ${wk_data_image}
    env_file:
      - ./.env
    deploy:
      placement:
        constraints: [node.role == worker]

  serve:
    environment:
      APPLICATION_NAME: wk_serve
    ports:
      - "${SERVE_PORT}:${SERVE_PORT}"
    image: ${wk_serve_image}
    env_file:
      - ./.env
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 5s
      placement:
        constraints: [node.role == worker]

  swaggerUi:
    image: schickling/swagger-ui
    environment:
      API_URL: "http://localhost:3000/swagger"
      PORT: 4666
    ports:
      - "${SWAGGER_PORT}:${SWAGGER_PORT}"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 5s
      placement:
        constraints: [node.role == worker]
